## forecast yields with pi*+r* vs. random walk vs. unconditional mean

## - added more forecast methods
## - estimate only once at each t, construct forecasts at all horizons
##   -> the sample is shorter for all horizons but h_max

rm(list=ls())
require(xtable) # xtable()
require(forecast)
source("R/trends_fns.r")

df <- loadData(end.yyyymm=201612)

## df <- subset(df, yyyymm >= 198803) # gives different results than _BC.R because BC is semiannual

df$istar <- df$pistar.ptr + df$rstar.mean
df$f1015 <- (15*df$y15 - 10*df$y10)/(15-10)
df$f515 <- (15*df$y15 - 5*df$y5)/(15-5)
T <- nrow(df)

yieldvar <- "y10"

nms <- c("(1) random walk forecast",
         "(2) pi* + const",
         "(3) i*, estimated rho",
         "(4) i*, constant rho",
         "(5) AR(1)",
         "(6) forward rates")
hmax <- 20 # forecast horizon: 1 quarter to 5 years
t0 <- 20   # first forecast date
M <- length(nms)
tbl <- data.frame(matrix(NA, M, hmax))
rownames(tbl) <- nms
colnames(tbl) <- 1:hmax
y <- df[[yieldvar]]
e <- array(NA, c(T-hmax-t0+1, hmax, M))
rownames(e) <- df$yyyymm[t0:(T-hmax)]
rho.save <- numeric(T-hmax-t0+1)
h <- 1:hmax
for (t in t0:(T-hmax)) {
    ## RW
    e[t-t0+1, , 1] <- y[t+h] - y[t]

    ## pi-star
    s.pistar <- mean(y[1:t] - df$pistar.ptr[1:t])
    rho.pistar <- acf(y[1:t] - df$pistar.ptr[1:t], plot=FALSE)$acf[2]
    e[t-t0+1, , 2] <- y[t+h] - (rho.pistar^h*y[t] + (1-rho.pistar^h)*(df$pistar.ptr[t] + s.pistar))

    ## i-star
    rho.istar <- acf(y[1:t] - df$istar[1:t], plot=FALSE)$acf[2]
    e[t-t0+1, , 3] <- y[t+h] - (rho.istar^h*y[t] + (1-rho.istar^h)*df$istar[t])
    rho.save[t-t0+1] <- rho.istar

    ## i-star with constant rho
    rho <- 0.8
    e[t-t0+1, , 4] <- y[t+h] - (rho^h*y[t] + (1-rho^h)*df$istar[t])

    ## AR(1) for interest rates
    rval <- ar.ols(y[1:t], aic=FALSE, order.max=1, demean=TRUE, intercept=FALSE)
    rho.ar <- rval$ar[,,]; mean.ar <- rval$x.mean
    e[t-t0+1, , 5] <- y[t+h] - (rho.ar^h*y[t] + (1-rho.ar^h)*mean.ar)

    ## forward rates
    if (yieldvar=="y10") {
        ## five-year forecast of ten-year yield
        e[t-t0+1, 20, 6] <- y[t+20] - df$f515[t]
    } else if (yieldvar=="y5") {
        ## five- and ten-year forecasts of five-year yield
        if (hmax>=20)
            e[t-t0+1, 20, 6] <- y[t+20] - df$f510[t]
        if (hmax>=40)
            e[t-t0+1, 40, 6] <- y[t+40] - df$f1015[t]
    }

}
for (j in 1:M)
    tbl[j, ] <- sprintf("%4.2f", colMeans(abs(e[,,j])))
    ## tbl[j, ] <- sprintf("%4.2f", sqrt(colMeans(e[,,j]^2)))

tbl <- tbl[,c(4,seq(10, hmax, 10))]

print(tbl)

## plot(rho.save, type="l")

## tmp <- cbind(y[(t0+40):T], y[t0:(T-40)], y[(t0+40):T] - y[t0:(T-40)], e[,40,1, drop=FALSE])
## rownames(tmp) <- rownames(e)
## print(head(tmp))
