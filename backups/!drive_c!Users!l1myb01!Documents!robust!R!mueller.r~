getMueller <- function(form, data, q) {
    ## Ibragimov-Mueller t-test and Wald-test
    ## Arguments:
    ##  form - formula for regression model
    ##  data - data.frame
    ##  q - how many subsamples
    ## Values:
    ##  betahat: estimated coefficients (q x K)
    ##  betabar: mean coefficients (K vector)
    ##  tstat, tcritval, tpval: test results for each coefficient (K vectors)
    betahat <- getSubsampleBetas(form, data, q)
    betabar <- colMeans(betahat)
    tstat <- sqrt(q)*betabar/apply(betahat, 2, sd)
    pval <- pt(abs(tstat), q-1, lower.tail=FALSE)*2
    rval <- list(betabar=betabar, betahat=betahat, tstat=tstat,
                 tcritval=qt(.975, q-1, lower.tail=FALSE),
                 tpval=pval)
    rval
}

getMuellerTable <- function(fmla, data, qs) {
    require(lmtest)
    require(sandwich)
    if (missing(qs))
        stop("need to provide q's to getMuellerTable")
    lm0 <- lm(fmla, data=data)
    T <- length(lm0$residuals)
    ## regressors
    regs <- attr(terms(fmla), "term.labels")
    K <- length(regs)
    tbl <- matrix(NA, 1+length(qs), K)
    colnames(tbl) <- regs
    rownames(tbl) <- c("Coefficient", paste("IM q =", qs))
    ## Coefficients
    tbl[1, ] <- lm0$coef[-1]
    ## IM test
    for (i in seq_along(qs)) {
        q <- qs[i]
        rval <- getMueller(fmla, data, q)
        tbl[1+i, 1:K] <- rval$tpval
    }
    tbl
}
