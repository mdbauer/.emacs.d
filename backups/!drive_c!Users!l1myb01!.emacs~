(add-to-list 'load-path "~/.emacs.d/lisp/")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; emacsclient
(server-start)
(setq server-socket-dir "~/.emacs.d/server")
;; to avoid "Buffer foo still has clients; kill it?"
;; https://shreevatsa.wordpress.com/2007/01/06/using-emacsclient/
(remove-hook 'kill-buffer-query-functions 'server-kill-buffer-query-function)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; package management
(require 'package)
(setq package-enable-at-startup nil)
(setq package-archives '(("melpa" . "~/.emacs.d/elpa-mirror/melpa/")
                         ("org"   . "~/.emacs.d/elpa-mirror/org/")
                         ("gnu"   . "~/.emacs.d/elpa-mirror/gnu/")))
;; from https://github.com/d12frosted/elpa-mirror
; activate all the packages (in particular autoloads)
(package-initialize)
; list the packages you want
(setq package-list '(better-defaults
                     recentf
                     ess
                     auctex
                     flycheck
                     org-bullets
                     tramp
                     try
                     magit
                     markdown-mode
                     pandoc-mode
                     ))
; fetch the list of packages available
(unless package-archive-contents
  (package-refresh-contents))
; install the missing packages
(dolist (package package-list)
  (unless (package-installed-p package)
    (package-install package)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; various settings

;;(set-frame-font "Inconsolata-12" nil t)
(set-frame-font "Consolas-12" nil t)
;; (add-to-list 'default-frame-alist '(font . "DejaVu Sans Mono-10"))

;; (require 'material-theme)
;; (load-theme 'material t)
;; (require 'zenburn-theme)
;; (load-theme 'zenburn t)
(load-theme 'tango-dark t)

(require 'better-defaults)
;; (require 'hfyview)

;; markdown mode
(autoload 'markdown-mode "markdown-mode"
   "Major mode for editing Markdown files" t)
(add-to-list 'auto-mode-alist '("\\.text\\'" . markdown-mode))
(add-to-list 'auto-mode-alist '("\\.markdown\\'" . markdown-mode))
(add-to-list 'auto-mode-alist '("\\.md\\'" . markdown-mode))
(add-to-list 'auto-mode-alist '("\\.Rmd\\'" . markdown-mode))
(add-hook 'markdown-mode-hook
	  (lambda ()
	    (markdown-enable-math)))
(setq markdown-command "pandoc --from markdown")
(load "pandoc-mode")
(add-hook 'markdown-mode-hook 'pandoc-mode)

;; reduce the number of ding warnings
(setq ring-bell-function
      (lambda ()
	(unless (memq this-command
		      '(isearch-abort abort-recursive-edit exit-minibuffer keyboard-quit))
	  (ding))))

;; more informative frame titles
(setq frame-title-format
          '(buffer-file-name
            "%f"
            (dired-directory dired-directory "%b")))

;; Do not display startup screen
(setq inhibit-startup-screen t
      inhibit-startup-echo-area-message t)

;; to move between windows using shift-key
(windmove-default-keybindings)

;; keyboard macros
(global-set-key [f5] 'call-last-kbd-macro)

;; dired-x
(add-hook 'dired-load-hook
          (lambda ()
            (load "dired-x")
            ;; Set dired-x global variables here.  For example:
            ;; (setq dired-guess-shell-gnutar "gtar")
            ;; (setq dired-x-hands-off-my-keys nil)
            ))
(add-hook 'dired-mode-hook
          (lambda ()
            ;; Set dired-x buffer-local variables here.  For example:
            ;; (dired-omit-mode 1)
            ))

;; Windows explorer
;; F12 - Open Explorer for the current file path
(defun explorer ()
  "Launch the windows explorer in the current directory and selects current file"
  (interactive)
  (w32-shell-execute
   "open"
   "explorer"
   (concat "/e,/select," (convert-standard-filename buffer-file-name))))

(global-set-key [f12]         'explorer)

;; registers jumping to .emacs and tm.org
;(set-register ?e '(file . "~/.emacs"))
;(set-register ?t '(file . "C:/Users/l1myb01/Documents/org/tm.org"))

;; recentf
(require 'recentf)
(recentf-mode 1)
(setq recentf-max-menu-items 25)
(global-set-key "\C-x\ \C-r" 'recentf-open-files)

;; org-mode
(global-set-key "\C-ca" 'org-agenda)
(global-set-key "\C-cl" 'org-store-link)  ;; what are these two gues for?
(global-set-key "\C-cb" 'org-iswitchb)
(global-set-key "\C-cc" 'org-capture)
(global-set-key "\C-cc" 'org-capture)
(setq org-directory "~/Documents/org/")
(setq org-default-notes-file (concat org-directory "notes.org"))
(require 'org-bullets)
(add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(LaTeX-command "latex -file-line-error")
 '(org-agenda-files
   (quote
    ("~/Documents/trends/trends.org" "~/Documents/robust/robust.org" "~/Documents/org/papers.org" "~/Documents/org/tm.org")))
 '(org-agenda-skip-deadline-if-done t)
 '(org-agenda-skip-scheduled-if-done t)
 '(org-clock-into-drawer t)
 '(org-file-apps
   (quote
    ((auto-mode . emacs)
     ("\\.mm\\'" . default)
     ("\\.x?html?\\'" . default)
     ("\\.pdf\\'" . default)
     ("\\.docx\\'" . default))))
 '(package-selected-packages
   (quote
    (try pandoc-mode org-bullets markdown-mode magit flycheck ess better-defaults auctex))))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Latex

;; AUCTex
(require 'tex-site)
(setq TeX-auto-save t)
(setq TeX-parse-self t)
(setq-default TeX-master nil) ; Query for master file.
(setq tex-dvi-view-command "yap")
(setq TeX-source-specials-mode t)

;; Use flyspell with latex for spell-checking
(add-hook 'LaTeX-mode-hook 'flyspell-mode)

;; Reftex
;; turn on reftex for all tex files
(add-hook 'LaTeX-mode-hook 'turn-on-reftex)   ; with AUCTeX LaTeX mode
(add-hook 'latex-mode-hook 'turn-on-reftex)   ; with Emacs latex mode
(setq reftex-ref-macro-prompt nil)  ; don't ask for reference format
(setq reftex-plug-into-AUCTeX t) ; integrate RefTeX with AUCTeX

;; Beamer -- see http://lists.gnu.org/archive/html/auctex/2006-01/msg00023.html
(eval-after-load "tex"
  '(TeX-add-style-hook "beamer" 'my-beamer-mode))

(setq TeX-region "regionsje")
(defun my-beamer-mode ()
  "My add ons for when in beamer."

  ;; when in a Beamer file I want to use pdflatex.
  ;; Thanks to Ralf Angeli for this.
  (TeX-PDF-mode 1)                      ;turn on PDF mode.

  ;; Tell reftex to treat \lecture and \frametitle as section commands
  ;; so that C-c = gives you a list of frametitles and you can easily
  ;; navigate around the list of frames.
  ;; If you change reftex-section-level, reftex needs to be reset so that
  ;; reftex-section-regexp is correctly remade.
  (require 'reftex)
  (set (make-local-variable 'reftex-section-levels)
       '(("lecture" . 1) ("frametitle" . 2)))
  (reftex-reset-mode)

  ;; add some extra functions.
  (define-key LaTeX-mode-map "\C-cf" 'beamer-template-frame)
  (define-key LaTeX-mode-map "\C-\M-x" 'tex-frame)
)

(defun tex-frame ()
  "Run pdflatex on current frame.
Frame must be declared as an environment."
  (interactive)
  (let (beg)
    (save-excursion
      (search-backward "\\begin{frame}")
      (setq beg (point))
      (forward-char 1)
      (LaTeX-find-matching-end)
      (TeX-pin-region beg (point))
      (letf (( (symbol-function 'TeX-command-query) (lambda (x) "LaTeX")))
        (TeX-command-region))
        )
      ))

(defun beamer-template-frame ()
  "Create a simple template and move point to after \\frametitle."
  (interactive)
  (LaTeX-environment-menu "frame")
  (insert "\\frametitle{}")
  (backward-char 1))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; ESS
(add-hook 'ess-pre-run-hook
	  (lambda () (setq ess-directory "~/Documents/R/")))
;;(require 'ess-site) ;; this takes a while, doesn't seem necessary
(setq inferior-R-args "--no-save ")   ;; don't prompt for saving workspace
(setq inferior-R-program-name "C:/Program Files/R/R-3.4.0/bin/x64/Rterm")
(setq inferior-STAT-program-name "C:/Program Files (x86)/Stata14/StataMP-64.exe")

;; flycheck slows things down and isn't necessary -- useful for C++ coding though
;; (global-flycheck-mode)
;; (setq flycheck-r-lintr-executable "C:/Program Files/R/R-3.4.0/bin/x64/Rterm")
;; (setq flycheck-global-modes '(not LaTeX-mode latex-mode tex-mode TeX-latex-mode)) ;; makes latex editing too slow

; tips from http://emacswiki.org/emacs/EmacsSpeaksStatistics
(setq ess-eval-visibly-p nil) ; otherwise C-c C-r (eval region) takes forever
;; (setq ess-ask-for-ess-directory nil) ;otherwise you are prompted each time you start an interactive R session

;; following R coding standards recommendations
;; http://stat.ethz.ch/CRAN/doc/manuals/R-ints.html#R-coding-standards
(add-hook 'ess-mode-hook
	  (lambda ()
	    (ess-set-style 'C++ 'quiet)
	    (add-hook 'local-write-file-hooks
		      (lambda ()
			(ess-nuke-trailing-whitespace)))))
(setq ess-nuke-trailing-whitespace-p t)
(setq c-default-style "bsd"
      c-basic-offset 4)

;; ;; cc mode
;; (require 'cc-mode)
;; (define-key c-mode-base-map (kbd "RET") 'newline-and-indent) ;; newline-and-indent (normally C-j) to the return key.

;; ;; spell-checking
;; ;; or: (add-to-list 'exec-path "c:/aspell/bin/") and then only aspell below
;; (setq-default ispell-program-name "c:/emacs/aspell/bin/aspell")
;; (require 'ispell)

;; IDO - interactively do things
;; (ido-mode 1)  ; better-defaults turns these on
;; (setq ido-enable-flex-matching t)
(setq ido-everywhere t)
 ;; when finding files, C-f will revert to old-style completion

;; add new lines when you reach the end of the buffer
(setq next-line-add-newlines t)

;; ;; AutoComplete
;; (require 'auto-complete-config)
;; (add-to-list 'ac-dictionary-directories "~/.emacs.d//ac-dict")
;; (ac-config-default)
;; ; this doesn't work
;; ; (define-key ac-completing-map (kbd "M-h") 'ac-quick-help)

;; magit
(global-set-key (kbd "C-x g") 'magit-status)
;; (put 'upcase-region 'disabled nil)

;; make/compilation
(setq compilation-scroll-output t)
(global-set-key "\C-x\C-m" 'compile) ;; compile is just C-x C-m C-m (last RET is for compile prompt)

;; fixing prompts -- https://www.masteringemacs.org/article/disabling-prompts-emacs
(fset 'yes-or-no-p 'y-or-n-p)
(setq confirm-nonexistent-file-or-buffer nil)
(setq ido-create-new-buffer 'always)
(setq kill-buffer-query-functions
  (remq 'process-kill-buffer-query-function
        kill-buffer-query-functions))

;; open my time management file upon startup
(find-file "~/Documents/org/tm.org")

;; next: customize ido mode: https://www.masteringemacs.org/article/introduction-to-ido-mode
