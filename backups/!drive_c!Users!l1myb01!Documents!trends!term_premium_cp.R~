## calculate term premium implied by Cochrane-Piazzesi return regression
## similar to Sack (2006)
## - only major difference with Sack: using end-of-quarter yields

## some thoughts
## - Sack's result somehow start in 1961 although he says his data starts in the 70s
## - he is using estimated gamma from CP's paper, but those are not for GSW yields!
##   - if you run the CP regression in this data, you get a very different gamma
##   - plus, you'd want to get a gamma for average returns 2:15 year maturity
## - CP found that returns fro 2:5 year bonds are explained by the same linear combination of yields, but this analysis assumes that's also true for 6:15 year bonds


## how to apply this to our problem?
## - could use 1-3-5 year yields and trends in regression, and this method
## - seems more reasonable to just use VAR or VECM
##   - first-order VAR like Cochrane, but impose cointegration

rm(list=ls())
require(sandwich) # NeweyWest()
source("R/trends_fns.r")
df <- loadData()
rownames(df) <- NULL
df <- df[df$yyyymm < 200700, ]
cat("Date range:", range(df$yyyymm), "\n")
N <- 15
yield.cols <- attr(df, "yield.cols")[3:(2+N)]
mats <- (1:N)
Y <- data.matrix(df[,yield.cols])

## calculate excess returns -- annual returns in quarterly data
T <- nrow(df)
for (n in 2:N) {
    df[paste0("xr", n)] <- c(-(n-1)*Y[5:T, mats == n-1] + n*Y[1:(T-4), mats == n] - Y[1:(T-4), mats == 1], rep(NA, 4))
    df[paste0("f", n)] <- n*df[paste0("y", n)] - (n-1)*df[paste0("y", n-1)]
}

## df$xrbar <- rowMeans(df[paste0("xr", 2:5)])
## print(summary(lm(xrbar ~ y1 + f2 + f3 + f4 + f5, df)))
## very different results than CP because smoothed yields!

gamma <- c(-3.24, -2.14, 0.81, 3, 0.8, -2.08)
X <- cbind(1, df$y1, df$f2, df$f3, df$f4, df$f5)
df$cp <- X %*% gamma

coefs <- numeric(15)*NA
for (n in 2:15) {
    depvar <- paste0("xr", n)
    mod <- lm(get(depvar) ~ cp - 1 , df)
    coefs[n] <- mod$coef[1]
}
print(round(cbind(1:N, coefs),2))

## Calculate TP implied by path of expected excess returns
n <- 10
Erx <- matrix(0, T, n) # E_t rx_{t+i}^{n-i+1} for i=1..n-1 (rx is zero for i=n)
Ecp <- df$cp ## i=1: E_t cp_{t+i-1} = cp_t
EY <- Y ## E_t Y_{t+i-1} = Y_t
for (i in 1:(n-1)) {
    ## E_t rx_{t+i}^{n-i+1} = beta^{n-i+1} E_t cp_{t+i-1}
    Erx[, i] <- coefs[n-i+1]*Ecp
    ## now calculate Ecp for next iteration: E_t cp_{t+i}
    ## first need Ey: E_t Y_{t+i} based on E_t Y_{t+i-1} and E_t rx_{t+i}
    EY_save <- EY
    for (j in 1:(N-i))
        EY[,j] <- 1/j*((j+1)*EY_save[,j+1] - EY_save[,1] - coefs[j+1]*Ecp)
    EX <- cbind(1, EY[,1], 2*EY[,2]-EY[,1], 3*EY[,3]-2*EY[,2], 4*EY[,4]-3*EY[,3], 5*EY[,5]-4*EY[,4])
    Ecp <- EX %*% gamma
}
tp <- rowMeans(Erx)

plot(df$date, tp, type="l")



